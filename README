Inportant document:

1. Internal design
https://blog.zeerd.com/capicxx-example-helloworld/


2. examples using commonAPI
https://github.com/COVESA/capicxx-core-tools/tree/master/CommonAPI-Examples
https://usermanual.wiki/Document/CommonAPICppUserGuide.113855339.pdf

*** SETUP ***
1. install libs
-- install commonAPI lib
git clone git@github.com:taikt/capicxx-core-runtime.git 
( or git clone git@github.com:COVESA/capicxx-core-runtime.git)
cd capicxx-core-runtime
mkdir build
cd build
cmake ..
make
(optional: sudo make install)

-- install commonAPI-someip lib
git clone git@github.com:taikt/capicxx-someip-runtime.git
( or git clone git@github.com:COVESA/capicxx-someip-runtime.git)
cd capicxx-someip-runtime
mkdir build
cd build
cmake ..
make
(optional: sudo make install)

-- install vsomeip lib
git clone git@github.com:taikt/vsomeip.git
cd vsomeip
mkdir build
cd build
cmake ..
make
(optional: sudo make install)

1. generate code from .fidl, fdepl
download commonapi_core_generator
https://github.com/COVESA/capicxx-core-tools/releases

donwload someip generator
https://github.com/COVESA/capicxx-someip-tools/releases

~/someip/core/sip/src/methods$ 
./../../../../someip-gen-tools/gen-tools/commonapi_core_generator/commonapi-core-generator-linux-x86_64 -sk fidl/E03Methods.fidl

~/someip/core/sip/src/methods$ 
./../../../../someip-gen-tools/gen-tools/commonapi_someip_generator/commonapi-someip-generator-linux-x86_64 fidl/E03Methods-SomeIP.fdepl

=> src-gen: generated code 

# gen protobuf
cd protobuf
protoc --cpp_out=./gen requestMsg.proto

2. write CMakeLists.txt
Note: change pro_cliper directories
set (COMMONAPI_DIR "/data001/tai2.tran/someip/core/capicxx-core-runtime")
set (COMMONAPI_SOMEIP_DIR "/data001/tai2.tran/someip/core/capicxx-someip-runtime")
set (VSOMEIP_DIR "/data001/tai2.tran/someip/core/vsomeip")

3. build
cd ~/someip/core/sip/src/methods
mkdir build
cd build
cmake ..
make

(can skip this step if libraries are installed in /usr/local/lib) (add to ~/.profile for default) 
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/data001/tai2.tran/vsomeip/build

~/someip/core/sip/src/methods/build$ ./E03MethodsService
~/someip/core/sip/src/methods/build$ ./E03MethodsClient

4. Debug
a. error: Configuration module could not be loaded!

Fix: sudo ldconfig
https://github.com/COVESA/vsomeip/issues/235

b. If cannot connect service (proxy is not available)
change ServiceID value in fdepl, re-gen code 
i.e  E03Methods-SomeIP.fdepl
SomeIpServiceID = 4661
(only re-gen code, why?)

5. Note
-- Make document
sudo apt-get install asciidoc doxygen
mkdir build
cd build
cmake ..
make doxygen-doc



6. Someip internally

- async call: push to queue
sync call: process now
Ref: watch_->pushQueue(msg_queue_entry);

- asyncall mechanism
Ref: asyncAnswers_

how to set session id:
application_impl::send(std::shared_ptr<message> _message)
_message->set_session(get_session());

application_impl::get_session()
 if (0 == ++session_) 

- create vsomeip application name

Connection::Connection(const std::string &_name)
      : dispatchSource_(NULL),
        watch_(NULL),
        connectionStatus_(state_type_e::ST_DEREGISTERED),
        application_(vsomeip::runtime::get()->create_application(_name)),

